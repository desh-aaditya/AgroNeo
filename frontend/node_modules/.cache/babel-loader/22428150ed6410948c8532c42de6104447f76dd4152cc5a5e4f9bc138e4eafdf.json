{"ast":null,"code":"// import React, { useEffect, useState } from \"react\"\n\n// const CropRates = () => {\n//   const [crops, setCrops] = useState([])\n//   const [loading, setLoading] = useState(true)\n\n//   useEffect(() => {\n//     const fetchCrops = async () => {\n//       try {\n//         const res = await fetch(\"http://localhost:3000/api/crops\") // ✅ Change if hosted\n//         const data = await res.json()\n//         setCrops(data)\n//         setLoading(false)\n//       } catch (err) {\n//         console.error(\"Error fetching crops:\", err)\n//         setLoading(false)\n//       }\n//     }\n\n//     fetchCrops()\n//   }, [])\n\n//   if (loading) return <p>Loading crop rates...</p>\n\n//   return (\n//     <div style={{ padding: \"20px\" }}>\n//       <h2>Crop Rates</h2>\n//       {crops.length === 0 ? (\n//         <p>No data available</p>\n//       ) : (\n//         <ul>\n//           {crops.map((crop) => (\n//             <li key={crop._id}>\n//               <strong>{crop.cropName}</strong> - {crop.location}<br />\n//               Max: {crop.Maxprice}, Min: {crop.Minprice}, Avg: {crop.Avgprice}<br />\n//               Date: {new Date(crop.date).toLocaleDateString()}\n//               <hr />\n//             </li>\n//           ))}\n//         </ul>\n//       )}\n//     </div>\n//   )\n// }\n\n// export default CropRates","map":{"version":3,"names":[],"sources":["D:/CEP_Project/AgroNeo/frontend/src/pages/CropRates.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\"\r\n\r\n// const CropRates = () => {\r\n//   const [crops, setCrops] = useState([])\r\n//   const [loading, setLoading] = useState(true)\r\n\r\n//   useEffect(() => {\r\n//     const fetchCrops = async () => {\r\n//       try {\r\n//         const res = await fetch(\"http://localhost:3000/api/crops\") // ✅ Change if hosted\r\n//         const data = await res.json()\r\n//         setCrops(data)\r\n//         setLoading(false)\r\n//       } catch (err) {\r\n//         console.error(\"Error fetching crops:\", err)\r\n//         setLoading(false)\r\n//       }\r\n//     }\r\n\r\n//     fetchCrops()\r\n//   }, [])\r\n\r\n//   if (loading) return <p>Loading crop rates...</p>\r\n\r\n//   return (\r\n//     <div style={{ padding: \"20px\" }}>\r\n//       <h2>Crop Rates</h2>\r\n//       {crops.length === 0 ? (\r\n//         <p>No data available</p>\r\n//       ) : (\r\n//         <ul>\r\n//           {crops.map((crop) => (\r\n//             <li key={crop._id}>\r\n//               <strong>{crop.cropName}</strong> - {crop.location}<br />\r\n//               Max: {crop.Maxprice}, Min: {crop.Minprice}, Avg: {crop.Avgprice}<br />\r\n//               Date: {new Date(crop.date).toLocaleDateString()}\r\n//               <hr />\r\n//             </li>\r\n//           ))}\r\n//         </ul>\r\n//       )}\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// export default CropRates\r\n"],"mappings":"AAAA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}