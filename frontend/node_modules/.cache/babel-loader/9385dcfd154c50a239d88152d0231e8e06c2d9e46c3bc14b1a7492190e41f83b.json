{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"D:\\\\CEP_Project\\\\AgroNeo\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useState, useContext, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Set up axios defaults\n  const setupAxiosDefaults = token => {\n    if (token) {\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n    } else {\n      delete axios.defaults.headers.common[\"Authorization\"];\n    }\n  };\n  useEffect(() => {\n    // Check if user is logged in\n    const checkAuthStatus = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        if (token) {\n          setupAxiosDefaults(token);\n          try {\n            const response = await axios.get(\"http://localhost:5000/api/auth/verify\");\n            setUser(response.data.user);\n            setIsAuthenticated(true);\n          } catch (error) {\n            console.error(\"Token verification failed:\", error);\n            localStorage.removeItem(\"token\");\n            setupAxiosDefaults(null);\n          }\n        }\n      } catch (error) {\n        console.error(\"Auth check error:\", error);\n        localStorage.removeItem(\"token\");\n        setupAxiosDefaults(null);\n      }\n      setLoading(false);\n    };\n    checkAuthStatus();\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/auth/login\", {\n        email,\n        password\n      });\n      const {\n        token,\n        user\n      } = response.data;\n\n      // Store token and set axios defaults\n      localStorage.setItem(\"token\", token);\n      setupAxiosDefaults(token);\n      setUser(user);\n      setIsAuthenticated(true);\n      return true;\n    } catch (error) {\n      console.error(\"Login error:\", error);\n      return false;\n    }\n  };\n  const signup = async (name, email, password) => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/auth/signup\", {\n        name,\n        email,\n        password\n      });\n      const {\n        token,\n        user\n      } = response.data;\n\n      // Store token and set axios defaults\n      localStorage.setItem(\"token\", token);\n      setupAxiosDefaults(token);\n      setUser(user);\n      setIsAuthenticated(true);\n      return true;\n    } catch (error) {\n      console.error(\"Signup error:\", error);\n      return false;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    setupAxiosDefaults(null);\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      user,\n      login,\n      signup,\n      logout,\n      loading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"mKb+zX9grAar2iMVStuBBwt7fpw=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","_s2","createContext","useState","useContext","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","useAuth","AuthProvider","children","isAuthenticated","setIsAuthenticated","user","setUser","loading","setLoading","setupAxiosDefaults","token","defaults","headers","common","checkAuthStatus","localStorage","getItem","response","get","data","error","console","removeItem","login","email","password","post","setItem","signup","name","logout","Provider","value","fileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/CEP_Project/AgroNeo/frontend/src/context/AuthContext.js"],"sourcesContent":["\"use client\"\n\nimport { createContext, useState, useContext, useEffect } from \"react\"\nimport axios from \"axios\"\n\nconst AuthContext = createContext()\n\nexport const useAuth = () => useContext(AuthContext)\n\nexport const AuthProvider = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false)\n  const [user, setUser] = useState(null)\n  const [loading, setLoading] = useState(true)\n\n  // Set up axios defaults\n  const setupAxiosDefaults = (token) => {\n    if (token) {\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`\n    } else {\n      delete axios.defaults.headers.common[\"Authorization\"]\n    }\n  }\n\n  useEffect(() => {\n    // Check if user is logged in\n    const checkAuthStatus = async () => {\n      try {\n        const token = localStorage.getItem(\"token\")\n\n        if (token) {\n          setupAxiosDefaults(token)\n\n          try {\n            const response = await axios.get(\"http://localhost:5000/api/auth/verify\")\n            setUser(response.data.user)\n            setIsAuthenticated(true)\n          } catch (error) {\n            console.error(\"Token verification failed:\", error)\n            localStorage.removeItem(\"token\")\n            setupAxiosDefaults(null)\n          }\n        }\n      } catch (error) {\n        console.error(\"Auth check error:\", error)\n        localStorage.removeItem(\"token\")\n        setupAxiosDefaults(null)\n      }\n\n      setLoading(false)\n    }\n\n    checkAuthStatus()\n  }, [])\n\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/auth/login\", {\n        email,\n        password,\n      })\n\n      const { token, user } = response.data\n\n      // Store token and set axios defaults\n      localStorage.setItem(\"token\", token)\n      setupAxiosDefaults(token)\n\n      setUser(user)\n      setIsAuthenticated(true)\n      return true\n    } catch (error) {\n      console.error(\"Login error:\", error)\n      return false\n    }\n  }\n\n  const signup = async (name, email, password) => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/auth/signup\", {\n        name,\n        email,\n        password,\n      })\n\n      const { token, user } = response.data\n\n      // Store token and set axios defaults\n      localStorage.setItem(\"token\", token)\n      setupAxiosDefaults(token)\n\n      setUser(user)\n      setIsAuthenticated(true)\n      return true\n    } catch (error) {\n      console.error(\"Signup error:\", error)\n      return false\n    }\n  }\n\n  const logout = () => {\n    localStorage.removeItem(\"token\")\n    setupAxiosDefaults(null)\n    setUser(null)\n    setIsAuthenticated(false)\n  }\n\n  return (\n    <AuthContext.Provider value={{ isAuthenticated, user, login, signup, logout, loading }}>\n      {children}\n    </AuthContext.Provider>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}